@import url('https://fonts.googleapis.com/css?family=Roboto:400,300,100&display=swap');

$enable-responsive-font-sizes: true;

@import "material_design_colors";
@import "bootstrap/scss/bootstrap.scss";
@import '@fortawesome/fontawesome-free/css/all.css';

/**
 * Body
 **/
body {
  background-color: #f4f8fb;
  font-family: 'Roboto', sans-serif;
  font-weight: 300;
}

/**
 * Default container
 **/
.wrap > .container.default-container {
  padding-top: 70px;
}

/**
 * Text
 **/
body {
  color: black;
}

a {
  transition: color .1s linear;
}

a:link, a:visited, a:focus {
  color: $primary-color-normal;

  .darkmode & {
    color: $primary-color-lighter;
  }
}

a:hover {
  color: $primary-color-light;

  .darkmode & {
    color: $primary-color-light;
  }
}

/**
 * Panels
 **/
.panel-default {
  border-color: transparent;
}

.panel-default > .panel-heading {
  background: $primary-color-normal none;
}

.panel-default > .panel-heading a {
  color: $accent-color;
}

.panel-default > .panel-heading a:hover {
  color: $accent-color;
}

.panel-default > .panel-collapse > .panel-body {
  background-color: $primary-color-light;
  border-top-color: transparent;
}

/**
 * Navbar
 **/
.navbar-default {
  background-color: $primary-color-normal;
  box-shadow: rgba(0, 0, 0, 0.4) 0 2px 5px;
  transition: top .25s ease-in-out,
    opacity .25s ease-in-out;
  @include media-breakpoint-up(lg) { padding: 0 1rem; }

  &.hide-top {
    top: -60px;
  }

  &.hide {
    opacity: 0;
  }

  .navbar-nav {
    @include media-breakpoint-down(md) {
      margin-left: -15px;
      margin-right: -15px !important;
    }

    .nav-item {
      overflow: hidden;

      .nav-link {
        color: white;
        transition: background-color .2s linear, color .1s linear;
        border-radius: 0;

        @include media-breakpoint-down(md) {
          width: 100%;
          padding-left: 15px;
          padding-right: 15px;
        }

        &:hover,
        &:focus {
          color: white;
          background-color: $primary-color-dark;
        }
      }
    }

    & > li.active > a {
      color: white;
      background: $primary-color-dark none;
      transition: background-color .2s linear, color .1s linear;
    }

    & > li.active > a:hover {
      color: $accent-color;
      background-color: $primary-color-dark;
    }
  }

  .navbar-brand {
    color: $md-grey-200 !important;
    font-weight: 400;
  }

  .navbar-brand:hover {
    color: $md-grey-400 !important;
  }

  .navbar-collapse {
    border-color: $primary-color-normal;
    box-shadow: none;
  }

  @include media-breakpoint-down(md) {
    .offcanvas-collapse {
      display: block;
      position: fixed;
      top: 56px; /* Height of navbar */
      bottom: 0;
      left: -290px;
      width: 100%;
      max-width: 290px;
      padding-right: 1rem;
      padding-left: 1rem;
      overflow-y: auto;
      visibility: hidden;
      background-color: #343a40;
      transform: translateX(0);
      transition-timing-function: ease-in-out;
      transition-duration: .3s;
      transition-property: transform, visibility;
    }

    .offcanvas-collapse.open {
      transform: translateX(290px);
      visibility: visible;
    }
  }
}

/**
 * Code blocks
 **/
pre {
  border-radius: 3px;
  padding: 1rem;
  white-space: pre;

  > code {
    padding: 0;
  }
}

code {
  padding: 0.125rem 0.25rem;
  border-radius: 3px;
}

/**
 * Dark mode
 **/
body.darkmode { background-color: rgb(40, 40, 40) }
.darkmode {
  body {
    color: rgba(white, 0.9);
  }

  h1, h2, h3, h4, h5, h6, div, span:not([class^="hljs-"]), p, li {
    color: rgba(white, 0.9);
  }

  /*a {
    color: #9fa8da;

    &:hover {
      color: #3f51b5;
    }
  }*/

  .zoom-overlay {
    background: rgb(40, 40, 40);
  }

  code {
    background-color: #1f1f1f;
  }

  pre {
    code {
      background-color: transparent;
      span:not([class^="hljs-"]) {
        color: white;
      }
    }
  }

  .modal-content {
    background-color: #3f3f3f;
  }

  .text-muted {
    color: darken(rgba(white, 0.9), 25%) !important
  }

  .custom-file-label, .custom-select {
    background-color: lighten(rgb(40, 40, 40), 10%);
    border-color: lighten(rgb(40, 40, 40), 25%);
    color: rgba(white, 0.8);
  }

  .custom-file-label::after {
    background-color: lighten(rgb(40, 40, 40), 15%);
    color: rgba(white, 0.9);
  }

  .custom-select {
    background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' width='4' height='5' viewBox='0 0 4 5'%3e%3cpath fill='%23ddd' d='M2 0L0 2h4zm0 5L0 3h4z'/%3e%3c/svg%3e");
  }
}

.backdrop {
  -webkit-backdrop-filter: saturate(200%) blur(20px);
  backdrop-filter: saturate(200%) blur(20px);
}

/**
 * Input label group (Android-like inputs)
 */
.form-label-group {
  --input-padding-x: .75rem;
  --input-padding-y: .75rem;

  position: relative;
  margin-bottom: 1rem;

  & > input,
  & > label {
    padding: var(--input-padding-y) var(--input-padding-x);
  }

  & > label {
    position: absolute;
    top: 0;
    left: 0;
    display: block;
    width: 100%;
    margin-bottom: 0; /* Override default `<label>` margin */
    line-height: 1.5;
    color: #495057;
    border: 1px solid transparent;
    border-radius: .25rem;
    transition: all .1s ease-in-out;
  }

  input {
    &::-webkit-input-placeholder {
      color: transparent;
    }

    &:-ms-input-placeholder {
      color: transparent;
    }

    &::-ms-input-placeholder {
      color: transparent;
    }

    &::-moz-placeholder {
      color: transparent;
    }

    &::placeholder {
      color: transparent;
    }

    &:not(:placeholder-shown) {
      padding-top: calc(var(--input-padding-y) + var(--input-padding-y) * (2 / 3));
      padding-bottom: calc(var(--input-padding-y) / 3);
    }

    &:not(:placeholder-shown) ~ label {
      padding-top: calc(var(--input-padding-y) / 3);
      padding-bottom: calc(var(--input-padding-y) / 3);
      font-size: 12px;
      color: #777;
    }
  }
}

.form-group.material, .form-label-group.material {
  input {
    height: 48px;
  }

  input, textarea {
    border: none;
    border-bottom: 1px solid $md-grey-600;
    border-radius: 3px 3px 0 0;
    background-color: $md-grey-100;
    transition: border-bottom .2s ease-in-out, opacity .2s ease-in-out;

    .darkmode & {
      background-color: $md-grey-800;
      border-bottom: 1px solid $md-grey-400;
      color: $md-grey-100;
    }

    &:focus {
      box-shadow: none;
      border-bottom-color: $md-blue-400;
    }

    &:disabled, &[readonly] {
      background-color: $md-grey-100;
      opacity: 0.5;
      color: $md-grey-500;

      .darkmode & {
        background-color: $md-grey-800;
        color: $md-grey-200;
      }
    }

    &.is-invalid {
      border-bottom-color: #dc3545;
    }

    &.is-valid {
      border-bottom-color: #28a745;
    }
  }

  .darkmode & label {
    color: $md-grey-400;
  }
}

.toastify-toast {
  .default,
  .default div,
  .default p,
  .default span {
    $color: rgba(black, 0.9);
    color: $color;

    .text-muted {
      color: lighten($color, 20%) !important;
    }
  }

  .success,
  .success div,
  .success p,
  .success span {
    $color: rgba(black, 0.9);
    color: $color;

    .text-muted {
      color: lighten($color, 20%) !important;
    }
  }

  .info,
  .info div,
  .info p,
  .info span {
    $color: rgba(black, 0.9);
    color: $color;

    .text-muted {
      color: darken($color, 20%) !important;
    }
  }

  .warn,
  .warn div,
  .warn p,
  .warn span {
    $color: rgba(black, 0.9);
    color: $color;

    .text-muted {
      color: lighten($color, 20%) !important;
    }
  }

  .error,
  .error div,
  .error p,
  .error span {
    $color: rgba(black, 0.9);
    color: $color;

    .text-muted {
      color: darken($color, 20%) !important;
    }
  }
}
